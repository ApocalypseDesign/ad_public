<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./ADefxSDK_file/filelist.xml">
<title>ADefxSDK – documentazione</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Subject>ADefxSDK</o:Subject>
  <o:Author>Gerosa Riccardo a.k.a. HereBit^AD</o:Author>
  <o:LastAuthor>Nessuno</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>243</o:TotalTime>
  <o:Created>2001-04-01T14:21:00Z</o:Created>
  <o:LastSaved>2001-04-01T14:21:00Z</o:LastSaved>
  <o:Pages>4</o:Pages>
  <o:Words>1235</o:Words>
  <o:Characters>7042</o:Characters>
  <o:Company> Apocalypse Design 2000</o:Company>
  <o:Lines>58</o:Lines>
  <o:Paragraphs>14</o:Paragraphs>
  <o:CharactersWithSpaces>8648</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>14</w:HyphenationZone>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-language:EN-US;}
h1
	{mso-style-next:Normale;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;
	mso-fareast-language:EN-US;}
h2
	{mso-style-next:Normale;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:10.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:Arial;
	mso-fareast-language:EN-US;
	mso-bidi-font-style:italic;}
h3
	{mso-style-next:Normale;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:10.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:Arial;
	mso-fareast-language:EN-US;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-language:EN-US;}
p.Code, li.Code, div.Code
	{mso-style-name:Code;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	color:navy;
	mso-fareast-language:EN-US;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Special, li.Special, div.Special
	{mso-style-name:Special;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-language:EN-US;
	font-weight:bold;
	mso-bidi-font-weight:normal;
	font-style:italic;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 2.0cm 2.0cm 2.0cm;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:318123178;
	mso-list-type:hybrid;
	mso-list-template-ids:-2133547076 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l1
	{mso-list-id:460877436;
	mso-list-type:hybrid;
	mso-list-template-ids:-1128908334 67698689 2089039888 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l2
	{mso-list-id:935596511;
	mso-list-type:hybrid;
	mso-list-template-ids:2000616386 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l2:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l3
	{mso-list-id:1081096131;
	mso-list-type:hybrid;
	mso-list-template-ids:-923005608 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l3:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l4
	{mso-list-id:1897161115;
	mso-list-type:hybrid;
	mso-list-template-ids:-1635384592 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=IT style='tab-interval:35.4pt'>

<div class=Section1>

<div style='border:none;border-bottom:solid windowtext 1.5pt;padding:0cm 0cm 1.0pt 0cm'>

<h1 style='border:none;mso-border-bottom-alt:solid windowtext 1.5pt;padding:
0cm;mso-padding-alt:0cm 0cm 1.0pt 0cm'><span style='font-size:16.0pt;
mso-bidi-font-size:10.0pt'>ADefxSDK v1.2 – documentazione<span
style='mso-tab-count:1'>        </span></span><i><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB;
font-weight:normal'>by</span></i><i><span style='font-size:8.0pt;mso-bidi-font-size:
10.0pt;font-weight:normal'> Gerosa Riccardo a.k.a. HereBit<o:p></o:p></span></i></h1>

</div>

<p class=MsoNormal align=right style='text-align:right'><i><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:EN-GB'>Copyright
</span></i><i><span style='font-size:8.0pt;mso-bidi-font-size:10.0pt;
font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>ã</span></span></i><i><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:
EN-GB'><span style="mso-spacerun: yes">  </span>Apocalypse Design 2000<o:p></o:p></span></i></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2>Installazione dell’SDK</h2>

<p class=MsoNormal>Decomprimendo il file <b>ADefxSDK.zip</b> vengono create le
due sottodirectory <b><i>include</i></b> e <b><i>bin </i></b></p>

<p class=MsoNormal>In VisualC++ 6 selezionare<i> <b>Tools/Options/Directories </b></i>e
aggiungere la directory<i> <b>include</b> </i>a <i>“Include files” </i>e la<i> <b>bin</b>
</i>a<i> “Library files”</i>, poi chiudere e riavviare VisualC++.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Panoramica sui concetti di “controller” e “image”</h2>

<p class=MsoNormal style='text-align:justify'>Per fare in modo che i parametri
degli effetti possano essere modificati tramite <span lang=EN-US
style='mso-ansi-language:EN-US'>tools</span>, si utilizzano dei <b
style='mso-bidi-font-weight:normal'><i>controller</i></b>.</p>

<p class=MsoNormal style='text-align:justify'>Questi sono degli oggetti,
derivati appunto dall’oggetto di nome “<b>controller</b>” che, data una
posizione nella <span lang=EN-US style='mso-ansi-language:EN-US'>timeline</span>
della Demo, restituiscono un valore.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Esempio:</p>

<p class=Code>valore=miocontroller-&gt;getValue(0.5);</p>

<p class=MsoNormal>restituisce quanto vale “miocontroller” nel momento 0,5 (il
tempo va da 0 a 1, la demo inizia a 0 termina a 1)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Esistono 5 tipi di base di controller:</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i>CtFloat</i></b>,
che restituisce un <b style='mso-bidi-font-weight:normal'><i>float<o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i>CtInt</i></b>, che
restituisce un <b style='mso-bidi-font-weight:normal'><i>int<o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i>CtBool</i></b>,
che restituisce un <b style='mso-bidi-font-weight:normal'><i>bool<o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i>CtText</i></b>,
che restituisce un <b style='mso-bidi-font-weight:normal'><i>char*<o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i>CtVector2D</i></b><span
style='mso-bidi-font-weight:bold'>, che restituisce una coppia </span><b
style='mso-bidi-font-weight:normal'><i>x,y float<o:p></o:p></i></b></p>

<p class=MsoNormal><i>(probabilmente in futuro ne aggiungerò altri)<o:p></o:p></i></p>

<p class=MsoNormal>ognuna di queste classi ha delle sottoclassi da queste
derivate, che possono essere per esempio degli interpolatori lineari o spline
ecc.<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText>Ogni effetto, può avere come parametri un numero
indefinito di controller.</p>

<p class=MsoBodyText>Quando si crea un nuovo effetto è anche necessario
assegnare dei controller di default ai vari parametri.</p>

<p class=MsoBodyText><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>L’oggetto <b style='mso-bidi-font-weight:normal'><i>image </i></b>è
così definito:<b style='mso-bidi-font-weight:normal'><i><o:p></o:p></i></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></b></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>class image<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>{<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>public:<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span>void *voidptr;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span>unsigned char *uchar8ptr;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span>unsigned int *uint32ptr;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span>int size, width, height;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><span
style="mso-spacerun: yes">   </span>int *muly;<o:p></o:p></span></p>

<p class=Code>};</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Ogni effetto lavora su un certo numero di oggetti di questo
tipo (almeno uno).<o:p></o:p></p>

<p class=MsoNormal><b><i>Voidptr</i></b><i>, <b>uchar8ptr</b></i> e <b><i>uint32ptr</i></b><i>
</i>sono puntatori che puntano allo stesso buffer, ma al variare delle
situazioni uno può essere più comodo degli altri.<o:p></o:p></p>

<p class=MsoNormal>Il buffer è sempre a <b><i>32bpp</i></b>, in modo <b><i>ARGB</i></b>
interleaved.<o:p></o:p></p>

<p class=MsoNormal>Size è la dimensione in byte del buffer, width, height sono
le dimensioni dell’immagine.<o:p></o:p></p>

<p class=MsoNormal>Muly è un array che viene allocato e inizializzato
automaticamente, e contiene i valori degli spiazzamenti delle righe
dell’immagine, quindi per disegnare un pixel nel punto <b><i>P(x,y)</i></b> si
scriverà:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=FR style='mso-ansi-language:FR'>miaimage-&gt;uint32ptr[x+miaimage-&gt;muly[y]]=0xFFFFFF;<o:p></o:p></span></p>

<p class=Code><span lang=FR style='mso-ansi-language:FR'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2>Implementazione</h2>

<p class=MsoNormal style='text-align:justify'>Per creare un nuovo effetto
bisogna produrre un file <b style='mso-bidi-font-weight:normal'><i>.efx</i></b><i>
</i>(che in realtà è una <b style='mso-bidi-font-weight:normal'><i>dll</i></b>)
e inserirlo nella sottodirectory <b><i>EFX</i></b> del <span lang=EN-US
style='mso-ansi-language:EN-US'>player</span>.</p>

<p class=MsoNormal style='text-align:justify'>Per far questo è necessario
aprire il <span lang=EN-GB style='mso-ansi-language:EN-GB'>Workspace</span><span
lang=EN-GB> </span><b style='mso-bidi-font-weight:normal'><i>Adefx.dsw</i></b>,
che contiene un progetto di base con tutto il necessario per compilare
l’effetto.</p>

<p class=MsoNormal style='text-align:justify'>In questo progetto, le uniche
parti su cui intervenire sono i due files <b style='mso-bidi-font-weight:normal'><i>myefx.h</i></b>
e <b style='mso-bidi-font-weight:normal'><i>myefx.cpp</i></b>.</p>

<p class=MsoNormal style='text-align:justify'>Ecco come procedere:</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='text-align:justify;mso-list:l4 level1 lfo5;
     tab-stops:list 36.0pt'><span lang=EN-GB style='mso-ansi-language:EN-GB'>In
     <b style='mso-bidi-font-weight:normal'><i>myefx.h</i></b>:<b
     style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></li>
</ul>

<ul style='margin-top:0cm' type=disc>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal style='mso-list:l2 level2 lfo4;tab-stops:list 72.0pt'>Impostare
      il nome dell’effetto nella linea<span style="mso-spacerun: yes">  </span><b
      style='mso-bidi-font-weight:normal'><span style='font-size:9.0pt;
      mso-bidi-font-size:10.0pt;font-family:"Courier New";color:navy'>#define
      MYEFX_NAME &quot;Nome effetto&quot;</span> </b><i><span style='mso-bidi-font-weight:
      bold'>(attenzione, il nome dell’effetto deve essere corto, semplice e
      soprattutto univoco, non devono assolutamente esistere due effetti
      diversi con lo stesso nome)<o:p></o:p></span></i></li>
  <li class=MsoNormal style='mso-list:l2 level2 lfo4;tab-stops:list 72.0pt'>Impostare
      la descrizione dell’effetto nella linea<span style="mso-spacerun: yes"> 
      </span><b style='mso-bidi-font-weight:normal'><span style='font-size:
      9.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";color:navy'>#define
      MYEFX_DESC &quot;Descrizione effetto&quot; </span></b><i>(una frase, non
      un tema)</i></li>
 </ul>
 <li class=MsoNormal style='mso-list:l2 level1 lfo4;tab-stops:list 36.0pt'><span
     lang=EN-GB style='mso-ansi-language:EN-GB'>In </span><b style='mso-bidi-font-weight:
     normal'><i>myefx.cpp</i></b><span lang=EN-GB style='mso-ansi-language:
     EN-GB'>:<o:p></o:p></span></li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal style='mso-list:l2 level2 lfo4;tab-stops:list 72.0pt'>Implementare
      i metodi descritti qui sotto</li>
 </ul>
</ul>

<h3><span lang=EN-GB style='mso-ansi-language:EN-GB'>myefx::defineControllers(tChannel
*defaultChannel)<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'>Questo metodo ha il compito di
comunicare all’<b style='mso-bidi-font-weight:normal'><i>ADsystem</i></b> su
quali tipi di controllers riceverà in input l’effetto e su quali canali e
immagini dovrà lavorare.</p>

<p class=MsoNormal style='text-align:justify'>Il puntatore a canale che viene
passato a questo metodo si riferisce al canale di default su cui lavorerà
l’effetto.</p>

<p class=MsoNormal style='text-align:justify'>Naturalmente un effetto deve
necessariamente scrivere (e in genere anche leggere) da almeno un buffer di
immagine (canale), quindi dovremo innanzitutto definire:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>addChannel(defaultChannel,&quot;InOut&quot;,&quot;canale in
input/output&quot;);</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Se invece vogliamo avere un canale di input ed uno di output
separati possiamo scrivere per esempio:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>addChannel(defaultChannel,&quot;In&quot;,&quot;canale in
input&quot;);</p>

<p class=Code>addChannel(defaultChannel,&quot;Out&quot;,&quot;canale in
output&quot;);</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>E’ perciò possibile dichiarare un
numero imprecisato di canali su cui si intende far funzionare l’effetto,
l’unica limitazione è che ogni canale deve possedere un nome diverso, non
potremo quindi richiedere due <b style='mso-bidi-font-weight:normal'><i>“In”</i></b>,
ma piuttosto potremo usare due nomi diversi come <b style='mso-bidi-font-weight:
normal'><i>“In1”</i></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:9.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
color:navy'> </span></b>e <b style='mso-bidi-font-weight:normal'><i>“In2”</i></b>.</p>

<p class=MsoNormal style='text-align:justify'>Ai fini della semplicità d’uso è
consigliabile seguire delle convenzioni nell’assegnazione dei nomi.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Oltre a lavorare sui canali, un
effetto può fare uso di alcune immagini statiche (texture). Per aggiungerne
all’effetto si scrive:</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>addImage(&quot;In1&quot;,&quot;immagine in input 1&quot;);</p>

<p class=Code>addImage(&quot;In2&quot;,&quot;immagine in input 2&quot;);</p>

<p class=Code>…</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A questo punto dobbiamo
specificare quali sono i controller che l’effetto prende in input,</p>

<p class=MsoNormal style='text-align:justify'>se si intende creare un effetto
che non richiede alcun input (e che quindi non ha parametri modificabili a <span
lang=EN-GB style='mso-ansi-language:EN-GB'>runtime</span>) è possibile saltare
questa sezione.</p>

<p class=MsoNormal style='text-align:justify'>Per definire una proprietà di
tipo <b style='mso-bidi-font-weight:normal'><i>ctFloat</i></b><i> </i>si
scrive:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>addProperty(new
ctFloat(),&quot;NomeProprietà&quot;,&quot;descrizione&quot;);</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In questo modo però il valore di <span lang=EN-US
style='mso-ansi-language:EN-US'>default</span> del controller sarà 0. Se si
vuole che assuma un valore preciso, si può usare per esempio la classe
ctFloatConst, inserendovi una o più keys:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>ctFloatConst
*defaultIntensita=new ctFloatConst();<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>float
*defaultIntensitaKey=new float;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>*defaultIntensitaKey=0.5f;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>defaultIntensita-&gt;keys-&gt;keyAdd(0,defaultIntensitaKey);<o:p></o:p></span></p>

<p class=Code>addProperty(defaultIntensita,&quot;Intensita&quot;,&quot;Intensità
dell’effetto&quot;);</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In questo modo il valore di default della proprietà
“Intensita” sarà 0.5</p>

<p class=MsoNormal>La stessa regola vale per gli altri tipi di controller.</p>

<h3>myefx::updateControllers()</h3>

<p class=MsoNormal>I canali che sono stati definiti nella <b style='mso-bidi-font-weight:
normal'><i>defineControllers</i></b><i> </i>potrebbero essere utilizzati nel
seguente modo:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>image
*timageInOut;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageInOut=getChannelImage(&quot;InOut&quot;);<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageInOut-&gt;uint32ptr[x+timageInOut-&gt;muly[y]]=colore;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>…<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal>Per le immagini statiche:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>image
*timageIn1;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageInOut=getImage(&quot;In1&quot;);<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>colore=timageIn1-&gt;uint32ptr[x+timageIn1-&gt;muly[y]];<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal>mentre per i <span lang=EN-GB style='mso-ansi-language:EN-GB'>controllers</span>
si potrebbe fare per esempio:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>ctFloat *intensita;</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>intensita=(ctFloat *)getProperty(&quot;intensita&quot;);</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>float intensity=intensita-&gt;getValue(posizione_attuale);</p>

<p class=Code><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Questo genere di operazioni però,
se ripetuto ad ogni fotogramma, per ogni effetto, rallenterebbe visibilmente
l’esecuzione. Queste operazioni, nella stragrande maggioranza dei casi sono
anche inutili, perché il puntatore al controller o all’immagine possono variare
prima della fase di init, ma rimangono fissi durante la proiezione della demo<b>.<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Per questo motivo ogni volta che
uno dei puntatori cambia di valore, viene automaticamente richiamato il metodo <b
style='mso-bidi-font-weight:normal'><i>updateControllers</i></b>, che ha il
compito di aggiornare i valori dei puntatori che vengono memorizzati
all’interno dell’effetto.</p>

<p class=MsoNormal style='text-align:justify'>Per svolgere i compiti presentati
qui sopra in modo molto più efficiente, basterà quindi dichiarare nel file <b
style='mso-bidi-font-weight:normal'><i>myefx.h</i></b>, nella sezione <b
style='mso-bidi-font-weight:normal'><i>private</i></b> dell’effetto i vari
puntatori:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>image
*timageInOut;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>image
*timageIn1;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>ctFloat
*intensita;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal>mettere, come implementazione di <b style='mso-bidi-font-weight:
normal'><i>updateControllers</i></b>, le linee:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageInOut=getChannelImage(&quot;InOut&quot;);<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageIn1=getImage(&quot;In1&quot;);<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>intensita=(ctFloat
*)getProperty(&quot;intensita&quot;);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='mso-ansi-language:EN-GB'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal>e poi accedere a questi puntatori, nella <b
style='mso-bidi-font-weight:normal'><i>paint</i></b>, nel modo:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>timageInOut-&gt;uint32ptr[x+timageInOut-&gt;muly[y]]=colore;<o:p></o:p></span></p>

<p class=Code><span lang=EN-GB style='mso-ansi-language:EN-GB'>colore=timageIn1-&gt;uint32ptr[x+timageIn1-&gt;muly[y]];<o:p></o:p></span></p>

<p class=Code>float intensity=intensita-&gt;getValue(posizione_attuale);</p>

<h3><span lang=EN-GB style='mso-ansi-language:EN-GB'>void myefx::init()<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'>Questo metodo viene richiamato
per inizializzare l’effetto, dopo che è stato creato e dopo che sono state
richiamate la <b style='mso-bidi-font-weight:normal'><i>defineControllers</i></b>
e la <b style='mso-bidi-font-weight:normal'><i>updateControllers</i></b>.</p>

<p class=MsoNormal style='text-align:justify'>Bisogna però fare attenzione che
alcuni parametri, come per esempio la dimensione delle immagini su cui si
opera, possono essere modificate dal <span lang=EN-US style='mso-ansi-language:
EN-US'>tool</span> di <span lang=EN-US style='mso-ansi-language:EN-US'>linking</span>,
per cui si rende necessaria una nuova inizializzazione dell’effetto.</p>

<p class=MsoNormal style='text-align:justify'>Ogni volta che viene fatta una
modifica di questo tipo quindi, l’ADsystem provvede, nell’ordine, a richiamare
il metodo <b style='mso-bidi-font-weight:normal'><i>free</i></b> per deallocare
ciò che è stato allocato nella <b style='mso-bidi-font-weight:normal'><i>init</i></b>,
a richiamare la <b style='mso-bidi-font-weight:normal'><i>updateControllers</i></b>,
ed infine a eseguire di nuovo la <b style='mso-bidi-font-weight:normal'><i>init</i></b>.</p>

<p class=MsoNormal style='text-align:justify'>E’ quindi fondamentale che nella <b
style='mso-bidi-font-weight:normal'><i>free</i></b><i> </i>venga deallocato
tutto, altrimenti dopo qualche minuto di utilizzo del <span lang=EN-US
style='mso-ansi-language:EN-US;mso-bidi-font-weight:bold'>tool</span><span
lang=EN-US style='mso-bidi-font-weight:bold'> </span>si rischia di esaurire le
risorse di Windows.</p>

<p class=MsoNormal style='text-align:justify'>Il metodo deve contenere sempre
la riga seguente:</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>initialized=true;</p>

<h3><span lang=EN-GB style='mso-ansi-language:EN-GB'>void myefx::free()<o:p></o:p></span></h3>

<p class=MsoNormal>In questo metodo si deve deallocare tutto ciò che è stato
allocato nella <b style='mso-bidi-font-weight:normal'><i>init</i></b>. (vedi
nella <b style='mso-bidi-font-weight:normal'><i>init</i></b> per maggiori
informazioni)</p>

<p class=MsoNormal>Inoltre questo metodo deve sempre contenere la riga:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=Code>initialized=false;</p>

<h3><span lang=FR style='mso-ansi-language:FR'>void myefx::paint(double pos)<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'>E’ il “cuore” dell’effetto, ad
ogni fotogramma questo metodo viene richiamato, passandogli il parametro <b
style='mso-bidi-font-weight:normal'><i>pos</i></b> che indica la posizione
attuale all’interno della Demo (in <span lang=EN-GB style='mso-ansi-language:
EN-GB'>range</span> 0..1).</p>

<p class=MsoNormal style='text-align:justify'>Il modo in cui si accede alle
immagini e ai controller è spiegato qui sopra, quando si parla della <b
style='mso-bidi-font-weight:normal'><i>updateControllers</i></b>.</p>

</div>

</body>

</html>
